function ga_event(n,t){gtag("event",t,{event_category:n})}import{MapToGlobe,Planet,Moon,Rings,Atmosphere,Light}from"./core.js";const store=new Vuex.Store({state:{planetObject:null,surfaceImage:null,moonObject:null,moonPivot:null,ringsObject:null,backgroundImage:null,atmosphereObject:null,atmosphereEnabled:!1,lightObject:null,lightAnchor:null,lightAmbient:null,axisEnabled:!1,publicLink:"",privateLink:""},mutations:{resize:function(){MapToGlobe.WindowResize()},setSurfaceFile:function(n,t){n.surfaceImage=t},surfaceFileSelect:function(n,t){Planet.SetSurface(t,n.planetObject);n.surfaceImage=t;ga_event("Planet","Surface File Select")},heightmapFileSelect:function(n,t){Planet.SetHeightMap(t,n.planetObject);ga_event("Planet","Heightmap File Select")},nightmapFileSelect:function(n,t){Planet.SetNightMap(t,n.planetObject);ga_event("Planet","Nightmap File Select")},specularFileSelect:function(n,t){Planet.SetSpecular(t,n.planetObject);ga_event("Planet","Specular File Select")},addMoon:function(n){if(!n.moonObject){const t=new Moon;n.moonObject=t.moon;n.moonPivot=t.Object}ga_event("Moon","Add Moon")},removeMoon:function(n){MapToGlobe.DetachControls();Moon.Remove(n.moonPivot);n.moonObject=null;ga_event("Moon","Remove Moon")},moonSurface:function(n,t){Moon.SetSurface(t,n.moonObject);ga_event("Moon","Moon Surface File Select")},moonObject:function(n,t){n.moonObject=t},moonPivot:function(n,t){n.moonPivot=t},addRings:function(n){const t=new Rings;n.ringsObject=t;ga_event("Rings","Add Rings")},removeRings:function(n){MapToGlobe.DetachControls();Rings.Remove(n.ringsObject);n.ringsObject=null;ga_event("Rings","Remove Rings")},setRingsTexture:function(n,t){Rings.SetTexture(t,n.ringsObject);ga_event("Rings","Rings Texture Select")},ringsObject:function(n,t){n.ringsObject=t},backgroundImage:function(n,t){n.backgroundImage=t},planetObject:function(n,t){n.planetObject=t},atmosphereObject:function(n,t){n.atmosphereObject=t},addAtmosphere:function(n){n.atmosphereObject=new Atmosphere(n.planetObject,n.lightObject);n.atmosphereEnabled=!0;ga_event("Atmosphere","Enable Atmosphere")},removeAtmosphere:function(n){Atmosphere.Remove(n.atmosphereObject,n.planetObject);n.atmosphereObject=null;n.atmosphereEnabled=!1;ga_event("Atmosphere","Disable Atmosphere")},lightObject:function(n,t){n.lightObject=t},lightAmbient:function(n,t){n.lightAmbient=t},lightAnchor:function(n,t){n.lightAnchor=t},setPublicLink:function(n,t){n.publicLink=t},setPrivateLink:function(n,t){n.privateLink=t}},getters:{getStateValue:n=>t=>n[t]===null||n[t]===!1?!0:!1}});Vue.component("VueSlider",{props:["item"],template:`<div class="slider-container"><p>{{ item.text }}</p><vue-slider v-model="item.start" :min="item.min" :max="item.max" :interval="item.step" v-on:change="change($event, item)"></vue-slider></div>`,components:{"vue-slider":window["vue-slider-component"]},methods:{change:function(n,t){switch(t.id){case"darkness":case"rayleigh":case"mie":Atmosphere.Update(this.$store.state.atmosphereObject,this.$store.state.planetObject,t.id,n);break;case"ringsRadius":Rings.SetRadius(n,this.$store.state.ringsObject);break;case"sunIntensity":Light.SetIntensity(n,this.$store.state.lightObject);break;case"ambientIntensity":Light.SetIntensity(n,this.$store.state.lightAmbient);break;case"moonDistance":Moon.SetDistance(n,this.$store.state.moonObject)}}}});const checkboxComponent={props:["item"],template:`<div><input type="checkbox" v-bind:checked="checkedState" v-bind:disabled="disabledState" v-bind:id="item.id" v-bind:name="item.id" v-on:change="checkboxChange($event,item)"><label v-bind:for="item.id">{{ item.text }}</label></div>`,methods:{checkboxChange:function(n,t){switch(t.id){case"toggleAxis":Planet.ToggleAxis(this.$store.state.planetObject);break;case"toggleAtmosphere":this.$store.state.atmosphereObject?this.$store.commit("removeAtmosphere"):this.$store.commit("addAtmosphere");break;case"planetControls":case"ringsControls":case"lightingControls":if(n.target.checked){let n;switch(t.parent){case"planet":n=store.state.planetObject;break;case"rings":n=store.state.ringsObject;break;case"lighting":n=store.state.lightAnchor}MapToGlobe.AttachControls(n,"rotate")}else MapToGlobe.DetachControls()}}},computed:{checkedState:function(n){let t;switch(n.item.id){case"toggleAxis":t=this.$store.state.axisEnabled;break;case"toggleAtmosphere":t=this.$store.state.atmosphereEnabled;break;default:t=!1}return t},disabledState:function(n){return n.item.dependsOn?n.item.dependsOn&&this.$store.getters.getStateValue(n.item.dependsOn):!1}}},radioComponent={props:["item"],template:`<div><input type="radio" v-bind:disabled="disabledState" v-bind:id="item.id" v-bind:name="item.name" v-on:change="radioChange(item)" v-bind:checked="item.selected"><label v-bind:for="item.id">{{ item.text }}</label></div>`,methods:{radioChange:function(n){switch(n.id){case"bgImage":MapToGlobe.SetBGImage(this.$store.state.backgroundImage);break;case"bgBlack":MapToGlobe.SetBGBlack();break;case"bgTransparent":MapToGlobe.SetBGTransparent();break;case"bg3D":case"bg2D":MapToGlobe.SetBG3D();break;case"moonOrbitControls":case"moonRotationControls":case"moonScaleControls":let t;switch(n.controlObject){case"moon":t=store.state.moonObject;break;case"moonOrbit":t=store.state.moonPivot}MapToGlobe.AttachControls(t,n.controlType)}}},computed:{disabledState:function(n){return n.item.dependsOn?n.item.dependsOn&&this.$store.getters.getStateValue(n.item.dependsOn):!1}}};Vue.component("popout-menu",{props:["item"],template:`
        <div class="popout" v-bind:id="item.id">
            <h3 class="sidebar-category">{{ item.title }}</h3>
            <ul class="sidebar-items">
                <li v-for="component in item.components" v-bind:key="component">
                    <component v-bind:is="component.type" v-bind:item="component"></component>
                </li>
            </ul>
        </div>`,components:{color:{props:["item"],template:`<div><p>{{ item.text }}</p><chrome-picker :value="colors" v-on:input="colorChange" /></div>`,data:function(){return{colors:{hex:"#194d33",hsl:{h:150,s:.5,l:.2,a:1},hsv:{h:150,s:.66,v:.3,a:1},rgba:{r:25,g:77,b:51,a:1},a:1}}},methods:{colorChange:function(n){Atmosphere.Update(this.$store.state.atmosphereObject,this.$store.state.planetObject,"color",n.rgba)}},components:{"chrome-picker":VueColor.Chrome}},checkboxComponent:checkboxComponent,radioComponent:radioComponent}});Vue.component("modal",{template:"#modal-template",props:["show"],methods:{close:function(){this.$emit("close")}},mounted:function(){document.addEventListener("keydown",n=>{this.show&&n.keyCode===27&&this.close()})}});Vue.component("SavedModal",{template:"#saved-modal-template",props:["show"],computed:{publicLink:{get:function(){return this.$store.state.publicLink}},privateLink:{get:function(){return this.$store.state.privateLink}}},methods:{close:function(){this.$emit("close");this.$store.commit("setPublicLink","");this.$store.commit("setPrivateLink","")},copyLink:function(n){n.target.select();document.execCommand("copy")}}});Vue.component("ErrorModal",{template:"#error-modal-template",props:["show"],methods:{close:function(){this.$emit("close")}}});Vue.component("LoadingOverlay",{template:"#loading-overlay",props:["show"]});Vue.component("sidebar-item",{props:["item"],template:`
        <div class="sidebar-group">
            <h3 class="sidebar-category">{{ item.header }}</h3>
            <ul class="sidebar-items">
                <li v-for="subitem in item.items" v-bind:key="subitem">
                    <button v-on:click="subitem.submenu ? { click: menuClick($event) } : openMenuItem(subitem)" v-bind:id="subitem.id">{{ subitem.text }}</button>
                    <div class="sidebar-submenu" v-if="subitem.submenu">
                        <div v-for="submenuitem in subitem.submenu" v-bind:key="submenuitem" class="sidebar-group">
                            <h3 class="sidebar-category">{{ submenuitem.title }}</h3>
                            <ul class="sidebar-items">
                                <li v-for="submenuitem2 in submenuitem.items" v-bind:key="submenuitem2">
                                    <component v-bind:is="submenuitem2.component" v-bind:item="submenuitem2"></component>
                                    <popout-menu v-if="submenuitem2.popout" v-bind:item="submenuitem2.popout"></popout-menu>
                                </li>
                            </ul>
                        </div>
                    </div>
                </li>
            </ul>
        </div>`,methods:{openMenuItem:function(n){switch(n.event){case"helpOpen":window.open("/help");break;case"examplesOpen":window.open("/examples");break;case"saveScene":vm.showLoadingOverlay=!0;new URLSearchParams(window.location.search).get("key")?MapToGlobe.Update(n=>{vm.showLoadingOverlay=!1,n.IsSuccess?(vm.showSavedModal=!0,ga_event("Save","Update")):vm.showErrorModal=!0}):MapToGlobe.Save(n=>{vm.showLoadingOverlay=!1,n.IsSuccess?(this.$store.commit("setPublicLink",window.location.origin+"/"+n.data.id),this.$store.commit("setPrivateLink",window.location.origin+"/"+n.data.id+"?key="+n.data.key),vm.showSavedModal=!0,ga_event("Save","Save")):vm.showErrorModal=!0})}},menuClick:function(n){function i(){t.style.display="block";const n=t.scrollHeight+"px";t.style.display="";t.classList.add("show");t.style.height=n;setTimeout(()=>{t.style.height=""},250)}function r(){t.style.height=t.scrollHeight+"px";setTimeout(()=>{t.style.height="0"},1);setTimeout(()=>{t.classList.remove("show")},250);MapToGlobe.DetachControls()}document.querySelectorAll(".popout").forEach(function(n){n.style.display="none"});const t=n.target.nextElementSibling;while(t)if(t.matches(".sidebar-submenu")){t.classList.contains("show")?r():(MapToGlobe.DetachControls(),document.querySelector(".sidebar-submenu.show")&&document.querySelector(".sidebar-submenu.show").classList.remove("show"),i());return}}},components:{buttonComponent:{props:"item",template:`<button v-on:click="menuClick($event)" v-bind:id="item.id">{{ item.text }}</button>`},linkComponent:{props:["item"],template:`<a href="item.href">{{ item.text }}</a>`},textComponent:{props:["item"],template:`<button v-on:click="onClick(item)" v-bind:disabled="disabledState" v-bind:id="item.id">{{ item.text }}</button>`,methods:{onClick:function(n){if(n.event)switch(n.event){case"addMoon":this.$store.commit("addMoon");break;case"removeMoon":this.$store.commit("removeMoon");break;case"addRings":this.$store.commit("addRings");break;case"removeRings":this.$store.commit("removeRings");break;case"togglePopout":const t=document.getElementById(n.popout.id);t.style.display!=="block"?(t.style.display="block",t.style.top=t.previousElementSibling.getBoundingClientRect().top-t.getBoundingClientRect().height/2+"px"):(t.style.display="none",MapToGlobe.DetachControls());break;case"createGif":this.makeGif();break;case"screenshotDownload":MapToGlobe.TakeScreenshot();ga_event("Screenshot","Download Screenshot")}},makeGif:function(){const n=document.querySelector("input[name=rotationDirection]:checked").id==="gifDirectionL2R"?"+"+THREE.Math.degToRad(360):"-"+THREE.Math.degToRad(360);document.querySelector("input[name=rotatingObject]:checked").id==="gifRotatePlanet"?MapToGlobe.CreateGif(this.$store.state.planetObject,n):MapToGlobe.CreateGif(this.$store.state.lightAnchor,n);ga_event("Gif","Create Gif")}},computed:{disabledState:function(n){return n.item.dependsOn?n.item.dependsOn&&this.$store.getters.getStateValue(n.item.dependsOn):!1}}},checkboxComponent:checkboxComponent,radioComponent:radioComponent,fileComponent:{props:["item"],template:`<div><input type="file" v-bind:disabled="disabledState" v-on:change="fileSelect(item)" v-bind:id="item.id" v-bind:name="item.name"><label v-bind:for="item.id" class="customFileSelect">{{ item.text }}</label></div>`,methods:{fileSelect:function(n){const t=document.getElementById(n.id).files[0];if(t.type.match("image/*"))switch(n.id){case"surfaceFileSelect":this.$store.commit("surfaceFileSelect",t);break;case"heightmapFileSelect":this.$store.commit("heightmapFileSelect",t);break;case"nightmapFileSelect":this.$store.commit("nightmapFileSelect",t);break;case"specularFileSelect":this.$store.commit("specularFileSelect",t);break;case"moonSurface":this.$store.commit("moonSurface",t);break;case"backgroundImage":MapToGlobe.LoadBGImage(t,function(n){store.commit("backgroundImage",n)});break;case"ringTexture":this.$store.commit("setRingsTexture",t)}}},computed:{disabledState:function(n){return n.item.dependsOn?n.item.dependsOn&&this.$store.getters.getStateValue(n.item.dependsOn):!1}}}}});const vm=new Vue({el:"#app",created:function(){window.addEventListener("resize",function(){store.commit("resize")})},store,mounted:function(){if(document.getElementById("loadKey").dataset.key)MapToGlobe.Load(document.getElementById("loadJson").dataset.json,function(n){document.getElementById("loadJson").dataset.json="";n.forEach(n=>{switch(n.name){case"planet":store.commit("planetObject",n);store.commit("setSurfaceFile",n);break;case"moonParent":store.commit("moonPivot",n);store.commit("moonObject",n.children[0]);break;case"rings":store.commit("ringsObject",n);break;case"lightParent":store.commit("lightAnchor",n);store.commit("lightObject",n.children[0]);break;case"ambientLight":store.commit("lightAmbient",n);break;case"atmosphere":store.commit("atmosphereObject",n);store.state.atmosphereEnabled=!0}})});else{const t=new Planet;store.commit("planetObject",t);const n=new Light;store.commit("lightObject",n.light);store.commit("lightAnchor",n.anchor);store.commit("lightAmbient",n.ambientLight)}},data:{showSavedModal:!1,showErrorModal:!1,showLoadingOverlay:!1,sidebaritems:[{id:1,header:"Objects",items:[{text:"Planet",id:"planet",submenu:[{title:"Images",items:[{text:"Surface",id:"surfaceFileSelect",component:"fileComponent"},{text:"Heightmap",id:"heightmapFileSelect",component:"fileComponent",dependsOn:"surfaceImage"},{text:"Night",id:"nightmapFileSelect",component:"fileComponent",dependsOn:"surfaceImage"},{text:"Specular",id:"specularFileSelect",component:"fileComponent",dependsOn:"surfaceImage"}]},{title:"Axis",items:[{text:"Show",id:"toggleAxis",component:"checkboxComponent"}]},{title:"Atmosphere",items:[{text:"Show",id:"toggleAtmosphere",component:"checkboxComponent",dependsOn:"surfaceImage"},{text:"Settings",component:"textComponent",dependsOn:"atmosphereEnabled",event:"togglePopout",popout:{title:"Atmosphere Settings",id:"atmosphereSettings",components:[{text:"Night-side darkness",type:"VueSlider",id:"darkness",min:0,max:3,start:1,step:.05},{text:"Rayleigh scattering",type:"VueSlider",id:"rayleigh",min:0,max:.01,start:.0025,step:1e-6},{text:"Mie scattering",type:"VueSlider",id:"mie",min:0,max:.1,start:.001,step:1e-6},{text:"Color",type:"color"}]}}]},{title:"Controls",items:[{text:"Show",component:"checkboxComponent",id:"planetControls",parent:"planet"}]}]},{text:"Moon",id:"moon",submenu:[{title:"Add/Remove",items:[{text:"Add",id:"addMoon",component:"textComponent",event:"addMoon"},{text:"Remove",id:"removeMoon",component:"textComponent",event:"removeMoon",dependsOn:"moonObject"}]},{title:"Images",items:[{text:"Surface",component:"fileComponent",id:"moonSurface",dependsOn:"moonObject"}]},{title:"Controls",items:[{text:"Show",component:"textComponent",dependsOn:"moonObject",event:"togglePopout",popout:{title:"Controls",id:"moonControls",components:[{text:"Distance",type:"VueSlider",id:"moonDistance",min:3,max:20,start:3,step:.1},{text:"Show Orbit Controls",type:"radioComponent",id:"moonOrbitControls",name:"moonControls",controlObject:"moonOrbit",controlType:"rotate"},{text:"Show Moon Rotation",type:"radioComponent",id:"moonRotationControls",name:"moonControls",controlObject:"moon",controlType:"rotate"},{text:"Show Moon Scale",type:"radioComponent",id:"moonScaleControls",name:"moonControls",controlObject:"moon",controlType:"scale"}]}}]}]},{text:"Rings",id:"rings",submenu:[{title:"Add/Remove",items:[{text:"Add",id:"addRings",component:"textComponent",event:"addRings"},{text:"Remove",id:"removeRings",component:"textComponent",event:"removeRings",dependsOn:"ringsObject"}]},{title:"Images",items:[{text:"Surface",component:"fileComponent",id:"ringTexture",dependsOn:"ringsObject"}]},{title:"Properties",items:[{text:"Properties",component:"textComponent",event:"togglePopout",dependsOn:"ringsObject",popout:{title:"Rings Properties",id:"ringsProperties",components:[{text:"Radii",type:"VueSlider",id:"ringsRadius",min:2,max:10,start:[3,5],step:.1}]}}]},{title:"Controls",items:[{text:"Show",component:"checkboxComponent",id:"ringsControls",parent:"rings",dependsOn:"ringsObject"}]}]},{text:"Background",submenu:[{title:"Type",items:[{text:"Solid black",id:"bgBlack",name:"bgType",component:"radioComponent",selected:!0},{text:"Transparent",id:"bgTransparent",name:"bgType",component:"radioComponent"},{text:"Image",id:"bgImage",name:"bgType",component:"radioComponent",dependsOn:"backgroundImage"}]},{title:"Images",items:[{text:"Background",component:"fileComponent",id:"backgroundImage"}]}]},{text:"Lighting",submenu:[{title:"Position",items:[{text:"Show Controls",component:"checkboxComponent",id:"lightingControls",parent:"lighting"}]},{title:"Intensities",items:[{text:"Intensities",component:"textComponent",event:"togglePopout",popout:{title:"Light Intensities",id:"lightIntensities",components:[{text:"Sun Intensity",type:"VueSlider",id:"sunIntensity",min:0,max:5,start:1,step:.1},{text:"Ambient Light Intensity",type:"VueSlider",id:"ambientIntensity",min:0,max:10,start:0,step:.1}]}}]}]}]},{id:2,header:"Save",items:[{text:"Gifs",submenu:[{title:"Rotation Direction",items:[{text:"Left to Right",component:"radioComponent",name:"rotationDirection",id:"gifDirectionL2R",selected:!0},{text:"Right to Left",component:"radioComponent",name:"rotationDirection",id:"gifDirectionR2L"}]},{title:"Object to Rotate",items:[{text:"Planet",component:"radioComponent",name:"rotatingObject",id:"gifRotatePlanet",selected:!0},{text:"Sun",component:"radioComponent",name:"rotatingObject",id:"gifRotateSun"}]},{title:"Create",items:[{text:"Create",component:"textComponent",event:"createGif"}]}]},{text:"Screenshots",submenu:[{title:"Take screenshot and...",items:[{text:"Download",component:"textComponent",id:"screenshotDownload",event:"screenshotDownload"}]}]},{text:"Save",event:"saveScene"}]},{header:"Help",id:3,items:[{text:"Examples",event:"examplesOpen"},{text:"Help",event:"helpOpen"}]}]}});